<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on 余不二五</title>
    <link>http://buera.top/blog/tags/php/</link>
    <description>Recent content in php on 余不二五</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 25 Feb 2021 21:49:11 +0800</lastBuildDate><atom:link href="http://buera.top/blog/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Php Curl 发起get和post网络请求</title>
      <link>http://buera.top/blog/posts/php-curl-%E5%8F%91%E8%B5%B7get%E5%92%8Cpost%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Thu, 25 Feb 2021 21:49:11 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/php-curl-%E5%8F%91%E8%B5%B7get%E5%92%8Cpost%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid>
      <description>curl get请求 function curl_get($url){ $header = array( &amp;#39;Accept: application/json&amp;#39;, ); $curl = curl_init(); //设置抓取的url  curl_setopt($curl, CURLOPT_URL, $url); //设置头文件的信息作为数据流输出  curl_setopt($curl, CURLOPT_HEADER, 0); // 超时设置,以秒为单位  curl_setopt($curl, CURLOPT_TIMEOUT, 1); // 超时设置，以毫秒为单位  // curl_setopt($curl, CURLOPT_TIMEOUT_MS, 500);  // 设置请求头  curl_setopt($curl, CURLOPT_HTTPHEADER, $header); //设置获取的信息以文件流的形式返回，而不是直接输出。  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); //执行命令  $data = curl_exec($curl); // 显示错误信息  if (curl_error($curl)) { print &amp;#34;Error: &amp;#34; . curl_error($curl); } else { // 打印返回的内容  var_dump($data); curl_close($curl); } } curl post请求 // $url 是请求的链接 // $postdata 是传输的数据，数组格式 function curl_post( $url, $postdata ) { $header = array( &amp;#39;Accept: application/json&amp;#39;, ); //初始化  $curl = curl_init(); //设置抓取的url  curl_setopt($curl, CURLOPT_URL, $url); //设置头文件的信息作为数据流输出  curl_setopt($curl, CURLOPT_HEADER, 0); //设置获取的信息以文件流的形式返回，而不是直接输出。  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 超时设置  curl_setopt($curl, CURLOPT_TIMEOUT, 10); // 超时设置，以毫秒为单位  // curl_setopt($curl, CURLOPT_TIMEOUT_MS, 500);  // 设置请求头  curl_setopt($curl, CURLOPT_HTTPHEADER, $header); curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE ); curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE ); //设置post方式提交  curl_setopt($curl, CURLOPT_POST, 1); curl_setopt($curl, CURLOPT_POSTFIELDS, $postdata); //执行命令  $data = curl_exec($curl); // 显示错误信息  if (curl_error($curl)) { print &amp;#34;Error: &amp;#34; .</description>
    </item>
    
    <item>
      <title>Php 执行超时</title>
      <link>http://buera.top/blog/posts/php-%E6%89%A7%E8%A1%8C%E8%B6%85%E6%97%B6/</link>
      <pubDate>Sat, 06 Feb 2021 15:18:48 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/php-%E6%89%A7%E8%A1%8C%E8%B6%85%E6%97%B6/</guid>
      <description> Maximum execution time of 30 seconds exceeded
 ; PHP执行时间无限制 max_execution_time = 0; </description>
    </item>
    
    <item>
      <title>七牛云内容审核API之PHP服务端请求代码</title>
      <link>http://buera.top/blog/posts/%E4%B8%83%E7%89%9B%E4%BA%91%E5%86%85%E5%AE%B9%E5%AE%A1%E6%A0%B8api%E4%B9%8Bphp%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Tue, 15 Sep 2020 17:23:55 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/%E4%B8%83%E7%89%9B%E4%BA%91%E5%86%85%E5%AE%B9%E5%AE%A1%E6%A0%B8api%E4%B9%8Bphp%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BB%A3%E7%A0%81/</guid>
      <description> 调用七牛云图片审核接口
 &amp;lt;?php namespace app\api\controller; use \Qiniu\Auth; use Qiniu\Http\Client; class Test { public function index(){ // 用于签名的公钥和私钥  $accessKey = &amp;#34;&amp;#34;; $secretKey = &amp;#34;&amp;#34;; $auth = new Auth($accessKey, $secretKey); $uri = &amp;#39;https://i.loli.net/2020/09/28/VtIqovsR649Zmdh.jpg&amp;#39;; $url = &amp;#34;http://ai.qiniuapi.com/v3/image/censor&amp;#34;; $method = &amp;#34;POST&amp;#34;; $host = &amp;#34;ai.qiniuapi.com&amp;#34;; $body = &amp;#34;{ \&amp;#34;data\&amp;#34;: { \&amp;#34;uri\&amp;#34;: \&amp;#34;$uri\&amp;#34; } ,\&amp;#34;params\&amp;#34;: {\&amp;#34;scenes\&amp;#34;: [\&amp;#34;pulp\&amp;#34;,\&amp;#34;terror\&amp;#34;,\&amp;#34;politician\&amp;#34;]}}&amp;#34;; $contentType = &amp;#34;application/json&amp;#34;; $headers = $auth-&amp;gt;authorizationV2($url, $method, $body, $contentType); $headers[&amp;#39;Content-Type&amp;#39;] = $contentType; $headers[&amp;#39;Host&amp;#39;] = $host; $response = Client::post($url, $body, $headers); if ($response-&amp;gt;ok()) { $r = $response-&amp;gt;json(); return json($r); } } } </description>
    </item>
    
    <item>
      <title>Windows下composer的安装与配置</title>
      <link>http://buera.top/blog/posts/windows%E4%B8%8Bcomposer%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 21 Apr 2020 14:19:59 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/windows%E4%B8%8Bcomposer%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>一、前提条件：
1、下载php
2、把php.exe所在文件路径添加到环境变量path中
3、检查php是否配置成功
按win+r，弹出框输入cmd，接着输入php -v，如果出现版本号则表示配置成功
4、开启openssl扩展
打开php.ini文件找到openssl把前面分号去掉即可；如果用的是wamp集成环境，右键在选项中开启即可
 二、composer安装
方法一：(推荐)
最简单省事的方法：点击Composer-Setup.exe下载，然后一步步next即可，注意安装过程中不要勾选代理
方法二：(方法一安装过程中出现问题无法解决时用方法二)
官网下载composer.phar，复制至php.exe相同路径下，接着创建两个文件composer和composer.bat
composer内容为：
#!/bin/sh  dir=$(cd &amp;#34;${0%[/\\]*}&amp;#34; &amp;gt; /dev/null; pwd) if [ -d /proc/cygdrive ]; then case $(which php) in $(readlink -n /proc/cygdrive)/*) # We are in Cygwin using Windows php, so the path must be translated  dir=$(cygpath -m &amp;#34;$dir&amp;#34;); ;; esac fi php &amp;#34;${dir}/composer.phar&amp;#34; &amp;#34;$@&amp;#34; composer.bat内容为：
@echo OFF :: in case DelayedExpansion is on and a path contains !</description>
    </item>
    
  </channel>
</rss>

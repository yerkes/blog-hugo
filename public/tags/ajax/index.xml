<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AJAX on 余不二五</title>
    <link>http://buera.top/blog/tags/ajax/</link>
    <description>Recent content in AJAX on 余不二五</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Oct 2020 19:57:16 +0800</lastBuildDate><atom:link href="http://buera.top/blog/tags/ajax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AJAX面试问题</title>
      <link>http://buera.top/blog/posts/ajax%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 15 Oct 2020 19:57:16 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/ajax%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</guid>
      <description>下面列出了常见的AJAX面试问题和答案。
1、什么是AJAX？ AJAX代表异步JavaScript和XML。它是一组用于异步显示数据的相关技术。换句话说，它在不重新加载网页的情况下发送和检索数据。
2、AJAX有哪些优点？  快速回复 带宽利用率 在从服务器检索数据之前，不会阻止用户。 它允许我们只将重要数据发送到服务器。 它使应用程序具有交互性和更快速。  3、AJAX有哪些缺点？ ​	（1） 取决于JavaScript
​	（2）安全问题
​	（3）调试很困难
4、原生js ajax请求有几个步骤？分别是什么 //创建 XMLHttpRequest 对象 var ajax = new XMLHttpRequest(); //规定请求的类型、URL 以及是否异步处理请求。 ajax.open(&amp;#39;GET&amp;#39;,url,true); //发送信息至服务器时内容编码类型 ajax.setRequestHeader(&amp;#34;Content-type&amp;#34;, &amp;#34;application/x-www-form-urlencoded&amp;#34;); //发送请求 ajax.send(null); //接受服务器响应数据 ajax.onreadystatechange = function () { if (obj.readyState == 4 &amp;amp;&amp;amp; (obj.status == 200 || obj.status == 304)) { } }; 5、ajax几种请求方式？他们的优缺点？ 常用的post,get,delete。不常用copy、head、link等等。
区别：
（1）post比get安全 (因为post参数在请求体中。get参数在url上面)
（2）get传输速度比post快 根据传参决定的。(post通过请求体传参，后台通过数据流接收。速度稍微慢一些。而get通过url传参可以直接获取)
（3）post传输文件大理论没有限制 get传输文件小大概7-8k ie4k左右
（4）get获取数据 post上传数据(上传的数据比较多 而且上传数据都是重要数据。所以不论在安全性还是数据量级 post是最好的选择)</description>
    </item>
    
    <item>
      <title>分别使用XHR、jQuery和Fetch实现AJAX</title>
      <link>http://buera.top/blog/posts/%E5%88%86%E5%88%AB%E4%BD%BF%E7%94%A8xhrjquery%E5%92%8Cfetch%E5%AE%9E%E7%8E%B0ajax/</link>
      <pubDate>Sun, 09 Aug 2020 16:50:52 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/%E5%88%86%E5%88%AB%E4%BD%BF%E7%94%A8xhrjquery%E5%92%8Cfetch%E5%AE%9E%E7%8E%B0ajax/</guid>
      <description>本文详细讲述如何使用原生 JS、jQuery 和 Fetch 来实现 AJAX。
AJAX 即 Asynchronous JavaScript and XML，异步的 JavaScript 和 XML。使用 AJAX 可以无刷新地向服务端发送请求接收服务端响应，并更新页面。
一、原生 JS 实现 AJAX JS 实现 AJAX 主要基于浏览器提供的 XMLHttpRequest（XHR）类，所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。
1. 获取XMLHttpRequest对象 // 获取XMLHttpRequest对象 var xhr = new XMLHttpRequest(); 如果需要兼容老版本的 IE (IE5, IE6) 浏览器，则可以使用 ActiveX 对象：
var xhr; if (window.XMLHttpRequest) { // Mozilla, Safari...  xhr = new XMLHttpRequest(); } else if (window.ActiveXObject) { // IE  try { xhr = new ActiveXObject(&amp;#39;Msxml2.</description>
    </item>
    
  </channel>
</rss>

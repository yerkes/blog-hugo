<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Element-UI on 余不二五</title>
    <link>http://buera.top/blog/tags/element-ui/</link>
    <description>Recent content in Element-UI on 余不二五</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Jan 2021 18:00:15 +0800</lastBuildDate><atom:link href="http://buera.top/blog/tags/element-ui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue中使input和el Input自动获取焦点的处理</title>
      <link>http://buera.top/blog/posts/vue%E4%B8%AD%E4%BD%BFinput%E5%92%8Cel-input%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E7%84%A6%E7%82%B9%E7%9A%84%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 27 Jan 2021 18:00:15 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/vue%E4%B8%AD%E4%BD%BFinput%E5%92%8Cel-input%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E7%84%A6%E7%82%B9%E7%9A%84%E5%A4%84%E7%90%86/</guid>
      <description>一、【普通的自定义指令操作】：先在入口文件注册一个全局自定义指令 // main.js Vue.directive(&amp;#39;focus&amp;#39;, { inserted (el, binding, vnode) { // 聚焦元素  el.focus() } }) 【普通的自定义指令使用】：v-&amp;quot;+指令名&amp;quot;
// index.vue &amp;lt;input v-focus placeholder=&amp;#34;因为有v-focus,所以我聚焦了&amp;#34; /&amp;gt; 二、【的自定义指令操作】：先在入口文件注册一个全局自定义指令 // main.js Vue.directive(&amp;#39;fo&amp;#39;, { inserted (el, binding, vnode) { // 聚焦元素  el.querySelector(&amp;#39;input&amp;#39;).focus() } }) 【的自定义指令使用】：v-&amp;quot;+指令名&amp;quot;
// index.vue &amp;lt;el-input v-fo placeholder=&amp;quot;因为有v-fo,所以我聚焦了&amp;quot;&amp;gt;&amp;lt;/el-input&amp;gt; </description>
    </item>
    
    <item>
      <title>Element Ui组件el Dialog宽度的修改</title>
      <link>http://buera.top/blog/posts/element-ui%E7%BB%84%E4%BB%B6el-dialog%E5%AE%BD%E5%BA%A6%E7%9A%84%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Thu, 31 Dec 2020 11:01:59 +0800</pubDate>
      
      <guid>http://buera.top/blog/posts/element-ui%E7%BB%84%E4%BB%B6el-dialog%E5%AE%BD%E5%BA%A6%E7%9A%84%E4%BF%AE%E6%94%B9/</guid>
      <description>在el-dialog里添加customClass自定义样式
&amp;lt;el-dialog :title=&amp;quot;&amp;quot; customClass=&amp;quot;customDialogWidth&amp;quot; :visible.sync=&amp;quot;&amp;quot; &amp;gt;&amp;lt;/el-dialog&amp;gt; 然后在里写样式，记得把scope去掉，让外部读取到样式
&amp;lt;style lang=&amp;#34;scss&amp;#34;&amp;gt; .customDialogWidth{ width: 74%; } &amp;lt;/style&amp;gt; </description>
    </item>
    
  </channel>
</rss>
